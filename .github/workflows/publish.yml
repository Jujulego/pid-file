name: 'Publish'

on:
  push:
    branches: [ main ]

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.6.0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.6.0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.6.0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Test
        run: yarn test

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-artifacts
          path: coverage

  publish:
    runs-on: ubuntu-latest
    environment: npm
    needs: [ lint, build, tests ]

    permissions:
      actions: write
      contents: write

    steps:
      - uses: actions/checkout@v3.6.0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist

      - name: Git setup
        run: |
          git config --global user.name 'Boobrie'
          git config --global user.email 'boobrie@users.noreply.github.com'

      - name: Regenerate README.md
        run: |
          npx jsdoc-to-markdown --files ./dist/cjs/*.js --template ./docs/README.hbs --example-lang typescript > ./README.md
          git diff --quiet --exit-code || git commit -am "chore: regenerate docs"

      - name: Apply version update
        id: version-apply
        run: |
          yarn version apply --all

          # Extract version number
          version=`jq ".version" package.json`
          echo "version=$version" >> $GITHUB_OUTPUT

          # Commit and tag
          if `git diff --quiet --exit-code`
          then
            echo "::warning::Nothing changed !"
            echo "::set-output name=need-release::false"
          else
            git commit -am "chore: update version numbers"
            git tag $version
            echo "::set-output name=need-release::true"
          fi

      - name: Push
        run: |
          git push
          git push --tags

      - name: Publish
        run: yarn npm publish --access public --tolerate-republish
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    outputs:
      version: ${{ steps.version-apply.outputs.version }}
      need-release: ${{ steps.version-apply.outputs.need-release }}

  sonarcloud:
    if: ${{ !startsWith(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest
    needs: [ tests, publish ]

    steps:
      - uses: actions/checkout@v3.6.0
        with:
          fetch-depth: 0

      - name: Download test coverage
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: coverage-artifacts
          path: coverage

      - name: Sonarcloud
        uses: sonarsource/sonarcloud-github-action@v1.9
        with:
          projectBaseDir: ${{ matrix.workspace }}
          args: >
            -Dsonar.projectVersion=${{ needs.publish.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [publish]
    if: ${{ needs.publish.outputs.need-release == 'true' }}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3.6.0
        with:
          ref: main

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.6.O
        with:
          node-version: 18.x

      - name: Setup gren
        run: npm install -g github-release-notes

      - name: ðŸ¤– Generate release
        run: gren release -t ${{ needs.publish.outputs.version }}
        env:
          GREN_GITHUB_TOKEN: ${{ github.token }}
